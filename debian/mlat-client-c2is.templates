Template: mlat-client-c2is/start-client
Description: Start the standalone multilateration client?
 The multilateration client can be started automatically in standalone mode
 based on the answers to these configuration questions.
 .
 Enable this if you are connecting to an independent mlat server and you
 have configuration details for that server.
 .
 Disable this if you are providing multilateration data to Flightaware
 via piaware, or if you will start mlat-client via some other mechanism.
Type: boolean
Default: true

Template: mlat-client-c2is/run-as-user
Description: User to run mlat-client as:
 When started automatically, mlat-client runs as an unprivileged system user. 
 This user will be created if it does not yet exist.
Type: string
Default: mlat

Template: mlat-client-c2is/server-hostport
Description: Multilateration server (host:port) to connect to:
 The multilateration client connects to a server that processes the
 collected data. This setting controls which server the client will
 connect to. The administrator of the server will be able to provide
 this information.
Type: string
Default: 127.0.0.1:3333

Template: mlat-client-c2is/server-user
Description: User to log into the server as:
 Here you have to enter the station name and the API-key we gave you, separated by a colon.
Type: string
Default:

Template: mlat-client-c2is/log-file
Description: Path to log to:
 When started automatically, mlat-client will log its output somewhere. This
 log mostly contains not very interesting connection info.
Type: string
Default: /var/log/mlat-client-c2is.log

Template: mlat-client-c2is/receiver-lat
Description: Latitude of receiver, in decimal degrees:
 The multilateration server must know the location of the receiver. This should
 be the position of the antenna, ideally to within about 25m. A four-decimal-
 place GPS location is fine.
Type: string
Default:

Template: mlat-client-c2is/receiver-lon
Description: Longitude of receiver, in decimal degrees:
 The multilateration server must know the location of the receiver. This should
 be the position of the antenna, ideally to within about 25m. A four-decimal-
 place GPS location is fine.
Type: string
Default:

Template: mlat-client-c2is/receiver-alt
Description: Altitude of receiver, in metres (height above ellipsoid):
 The multilateration server must know the location of the receiver. This should
 be the position of the antenna, ideally to within about 25m. A GPS-derived
 altitude is fine; use the WGS84 uncorrected altitude, not the corrected AMSL
 altitude. This value should be in metres.
Type: string
Default:

Template: mlat-client-c2is/input-type
Description: Receiver type: 
 This setting sets the type of receiver that Mode S messages will
 be read from.
 .
 dump1090:
  dump1090 (MalcolmRobb or mutability fork), or anything else
  that can generate Beast-format messages with a 12MHz clock.
 beast: 
  The Mode-S Beast.
 radarcape_gps: 
  Radarcape with GPS timestamps (preferred).
 radarcape_12mhz:
  Radarcape with legacy 12MHz timestamps.
 sbs:
  Kinetic Avionics SBS-1/SBS-3 systems.
Type: select
Choices: dump1090, beast, radarcape_gps, radarcape_12mhz, sbs
Default: dump1090

Template: mlat-client-c2is/input-hostport
Description: Input host:port for Mode S traffic:
 The multilateration client needs to read Mode S messages from a
 receiver such as dump1090. Here you can configure the host and port that the
 receiver is running on.
 .
 For dump1090, you need Beast-format output. This is usually available on port 30005.
 For Radarcapes, use port 10002.
 For SBS, use port 30006.
Type: string
Default: 127.0.0.1:30005

Template: mlat-client-c2is/results
Description: List of result connections/listeners:
 The multilateration client can return the calculated aircraft positions in
 various forms. This settings accepts a list of connections or listeners to
 establish. See the mlat-client --help option for the exact format.
 .
 A value of "none" disables the output of results.
Type: string
Default: beast,connect,127.0.0.1:30004

Template: mlat-client-c2is/extra-args
Description: Extra arguments to pass to mlat-client:
 Here you can add any extra arguments you want to pass to mlat-client.
Type: string
Default:

Template: mlat-client-c2is/invalid-is_not_empty
Description: Value cannot be empty.
Type: error

Template: mlat-client-c2is/invalid-is_port_number
Description: Value must be a valid port number (1024-65535), or zero to disable.
Type: error

Template: mlat-client-c2is/invalid-is_number
Description: Value must be a decimal number
Type: error

Template: mlat-client-c2is/invalid-is_non_root_user
Description: Value must be a username (without spaces) that isn't root.
Type: error
